<?php
if (!defined('BASEPATH'))
	exit('No direct script access allowed');
class User extends CI_Controller {
	public function __construct() {
		parent::__construct();
		$this -> load -> model('user_model');
	}

	public function index() {
		$data['title'] = 'Home';
		$this -> load -> view('include/header');
		$this -> load -> view('frontpage', $data);
		$this -> load -> view('include/footer');
	}

	public function login() {
		$playername = $this -> input -> post('playername');
		$password = md5($this -> input -> post('password'));

		$login_data = $this -> user_model -> login($playername, $password);
		$score = $this -> user_model -> readScore($playername);
		//var_dump($score);
		if ($login_data) {
			$this -> session -> set_userdata($login_data);
			if ($score) {
				$login_data['rank'] = $score['rank'];
				$login_data['score'] = $score['score'];
			}
			echo json_encode($login_data);
		} else {
			echo 'bad request';
		}
	}

	public function registration() {
		$playername = $this -> input -> post('playername');
		$password = md5($this -> input -> post('password'));
		$this -> load -> library('form_validation');
		// field name, error message, validation rules
		$this -> form_validation -> set_rules('playername', 'Playername', 'trim|required|min_length[4]|xss_clean');
		$this -> form_validation -> set_rules('password', 'Password', 'trim|required|min_length[4]|max_length[32]');

		if ($this -> form_validation -> run() == FALSE) {
			echo 'registration failed';
		} else {
			if ($data = $this -> user_model -> add_user($playername, $password)) {
				echo json_encode($data);
			} else {
				echo 'This Username is already in use';
			}
		}
	}

	public function logout() {

		$newdata = array('id' => '', 'playername' => '', 'logged_in' => FALSE, );
		$this -> session -> unset_userdata($newdata);
		$this -> session -> sess_destroy();
		echo 'TRUE';
		return TRUE;
		
	}

	public function readScore() {
		$playername = $this -> input -> post('user');
		$result = $this -> user_model -> readScore($playername);
	}

	public function addScore() {
		$score = $_POST['score'];
		//$score = $this -> input -> post('score');
		$session_data = $this -> session -> all_userdata();
		$playername = $session_data['playername'];
		$newScore = $this -> user_model -> addScore($score, $playername);
		echo $newScore;
	}

}
?>
