<?php
if (!defined('BASEPATH'))
	exit('No direct script access allowed');
class User_model extends CI_Model {
	public function __construct() {
		parent::__construct();
	}

	function login($playername, $password) {
		$this -> db -> where("playername", $playername);
		$this -> db -> where("password", $password);

		$query = $this -> db -> get("players");
		if ($query -> num_rows() > 0) {
			foreach ($query->result() as $rows) {
				//add all data to session
				$newdata = array('id' => $rows -> id, 'playername' => $rows -> playername, 'score' => $rows -> points, 'logged_in' => TRUE);
			}
			return $newdata;
		} else {
			return FALSE;
		}
	}

	function add_user($playername, $password) {
		$query = $this -> db -> query("SELECT id, playername FROM players WHERE playername = '$playername'");
		if (!empty($query)) {
			$data = array('playername' => $playername, 'password' => $password);
			$this -> db -> insert('players', $data);
			return $data;
		} else {
			return FALSE;
		}
	}

	function readScore($playername) {
		
		$sql1 = 'SET @rownum := 0';
		$sql2 = "SELECT rank, points FROM (
                   SELECT id, playername, @rownum := @rownum + 1 AS rank, points
                   FROM players ORDER BY points DESC
                   ) as result WHERE playername='$playername'";
		
		$query1 = $this -> db -> query($sql1);
		$query2 = $this -> db -> query($sql2);
		//"SELECT points FROM players WHERE playername = '$playername'");
		if (!empty($query2)) {
			foreach ($query2->result() as $rows) {
				$scores = array('rank' => $rows -> rank, 'score' => $rows -> points);
				return $scores;				
			}
		} else {
			return FALSE;
		}
	}

	function addScore($score, $playername) {
		$readScore = $this -> readScore($playername);
		$oldScore = $readScore['score'];
		$newScore = $oldScore + $score;
		$query = $this -> db -> query("UPDATE players SET points='$newScore' WHERE playername = '$playername'");
		if ($query) {
			return $newScore;
		} else {
			return FALSE;
		}
	}
	
	function queryRanking($howmany){	
		$sql = "SELECT rank, playername, points FROM (
	               SELECT id, playername, @rownum := @rownum + 1 AS rank, points
	               FROM players ORDER BY points DESC
	               ) as result LIMIT $howmany";
	               
	    $sql2 = "SELECT playername, gender, @curRank := @curRank + 1 AS rank
				FROM players p, (SELECT @curRank := 0) r
				ORDER BY rank";
		
		$query = $this -> db -> query($sql);

		if (!empty($query)) {
			foreach ($query->result() as $rows) {
				$scores[] = array('rank' => $rows -> rank, 'playername' => $rows -> playername, 'score' => $rows -> points);
			}
			return $scores;
		} else {
			return FALSE;
		}
	}
	
}
?>
